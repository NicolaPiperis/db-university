## Todo
Dopo aver creato un nuovo database nel vostro `phpMyAdmin` e aver importato lo schema allegato, *eseguite le query del file allegato*.

### Cosa consegnare?**
Dopo aver testato le vostre query con `phpMyAdmin`, riportatele in un file `txt` e caricatelo *nella vostra repo*.

### Query
#### SELECT

1. Selezionare tutti gli studenti nati nel 1990 `(160)`

    SELECT *
    FROM students 
    WHERE year(date_of_birth) = 1990;


3. Selezionare tutti i corsi che valgono più di 10 crediti `(479)`

    SELECT *
    FROM courses 
    WHERE cfu > 10;


4. Selezionare tutti gli studenti che hanno più di 30 anni

    SELECT * 
    FROM students 
    WHERE year(date_of_birth) < 1993;

    SELECT * 
    FROM students 
    WHERE YEAR(NOW()) - YEAR(date_of_birth) > 30;


5. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di laurea `(286)`

    SELECT * 
    FROM courses 
    WHERE period LIKE 'I semestre' 
        AND year = 1;


6. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del 20/06/2020 `(21)`

    SELECT * 
    FROM exams 
    WHERE TIME(`hour`) >= '14:00:00' 
        AND date LIKE '2020-06-20';


7. Selezionare tutti i corsi di laurea magistrale `(38)`

    SELECT * 
    FROM degrees 
    WHERE name LIKE '%magistrale%';


8. Contare il numero di dipartimenti di cui e' composta l'università `(12)`

    SELECT COUNT(*) 
    FROM departments;


9. Contare gli insegnanti che non hanno un numero di telefono `(50)`

    SELECT * 
    FROM teachers WHERE phone IS NULL;


#### GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno

    SELECT year(enrolment_day), COUNT(*) AS 'count' 
    FROM students 
    GROUP BY year(enrolment_day);


2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

    SELECT office_address, COUNT(*) AS 'count_same_address' 
    FROM teachers 
    GROUP BY office_address;


3. Calcolare la media dei voti di ogni appello d'esame

    SELECT exam_id AS 'exams_appeal', AVG(vote)
    FROM exam_student
    GROUP BY exam_id;


4. Contare quanti corsi di laurea ci sono per ogni dipartimento

    SELECT department_id , COUNT(*) AS 'count_degree_in_each_departments' 
    FROM degrees 
    GROUP BY department_id;


#### Join
1. Selezionare tutti gli studenti iscritti al `Corso di Laurea in Economia`

    SELECT * 
    FROM `students` 
    JOIN degrees 
        ON degrees.id = students.degree_id 
    WHERE degrees.name LIKE 'Corso di Laurea in Economia';

2. Selezionare tutti i `Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze`

    SELECT * 
    FROM degrees 
    JOIN departments 
        ON departments.id LIKE degrees.department_id 
    WHERE degrees.level LIKE 'magistrale' 
        AND departments.name LIKE 'Dipartimento di Neuroscienze';

3. Selezionare tutti i corsi in cui insegna `Fulvio Amato` (id=`44`)

    SELECT * 
    FROM courses 
    JOIN course_teacher 
        ON courses.id = course_teacher.course_id 
    JOIN teachers 
        ON teachers.id = course_teacher.teacher_id 
    WHERE teachers.name LIKE 'Fulvio' 
        AND teachers.surname LIKE 'Amato' 
        AND teachers.id = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

    SELECT * 
    FROM students 
    JOIN degrees
        ON degrees.id = students.degree_id 
    JOIN departments 
        ON degrees.department_id = departments.id 
    ORDER BY students.surname, students.name;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

    SELECT degrees.*, students.*, courses.* 
    FROM `degrees` 
    JOIN students 
        ON degrees.id = students.degree_id 
    JOIN courses 
        ON degrees.id = courses.degree_id;

6. Selezionare tutti i docenti che insegnano nel `Dipartimento di
Matematica` (54)

    SELECT * 
    FROM `teachers`
    JOIN course_teacher
        ON teachers.id = course_teacher.teacher_id
    JOIN courses
        ON courses.id = course_teacher.course_id
    JOIN degrees 
        ON degrees.id = courses.degree_id
    JOIN departments
        ON degrees.department_id = departments.id
    WHERE departments.name LIKE 'Dipartimento di Matematica';

##### Bonus
7. Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.